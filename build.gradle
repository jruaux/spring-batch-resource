plugins {
    id 'java'
    id 'java-library'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'org.jreleaser' version '0.4.0'
	id 'com.github.ben-manes.versions' version '0.39.0'
}

group = 'org.ruaux'
description = 'Spring Batch Resource'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.hsqldb:hsqldb'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Spring Batch Resource'
                description = 'Spring Batch item writers for file resources instead of actual files'
                url = 'https://github.com/jruaux/spring-batch-resource'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/jruaux/spring-batch-resource'
                    developerConnection = 'scm:git:git@github.com:jruaux/spring-batch-resource'
                    url = 'https://github.com/jruaux/spring-batch-resource'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

nexusPublishing {
    repositories {
        sonatype()
    }
}

jreleaser {
    project {
        name = 'spring-batch-resource'
        description = 'Spring Batch Resource'
        longDescription = 'Spring Batch resource writers'
        website = 'https://github.com/redis-developer/spring-batch-redis'
        authors = ['Julien Ruaux']
        tags = ['spring', 'batch', 'resource']
        license = 'Apache-2.0'
        copyright = '2020 Julien Ruaux'
    }
    release {
        github {
            username = 'jruaux'
            owner = 'jruaux'
            overwrite = true
        }
    }
}
